USE FUSIONTECH;

ALTER TABLE APP_USER ADD COLUMN IS_VERIFIED BOOLEAN DEFAULT FALSE;

# ALTER TABLE PRODUCT_VARIANT MODIFY COLUMN ACTIVE BOOLEAN DEFAULT FALSE;
#
# ALTER TABLE PRODUCT MODIFY COLUMN ACTIVE BOOLEAN DEFAULT FALSE;

UPDATE PRODUCT_VARIANT SET ACTIVE = TRUE;

UPDATE PRODUCT SET ACTIVE = TRUE;

# DELETE FROM REVIEW WHERE PRODUCT_ID=7 AND USER_ID=1;
# DELETE FROM REVIEW WHERE PRODUCT_ID=8 AND USER_ID=11;
# DELETE FROM REVIEW WHERE PRODUCT_ID=2 AND USER_ID=11;

# ALTER TABLE REVIEW ADD CONSTRAINT UNIQUE (PRODUCT_ID, USER_ID);

DROP TRIGGER IF EXISTS set_default_address;
DELIMITER  //
CREATE TRIGGER set_default_address
    AFTER INSERT ON SHIPPING_ADDRESS
    FOR EACH ROW
BEGIN
    DECLARE user_address_count INT;

    -- Count the number of addresses for the user
    SELECT COUNT(*) INTO user_address_count
    FROM SHIPPING_ADDRESS
    WHERE user_id = NEW.user_id;

    -- If user has no addresses, set the new address as default
    IF user_address_count = 1 THEN
        UPDATE APP_USER
        SET default_address_id = NEW.id
        WHERE id = NEW.user_id;
    END IF;
END//
DELIMITER ;

ALTER TABLE VOUCHER
    ADD COLUMN DISCOUNT TINYINT UNSIGNED NOT NULL;

ALTER TABLE product_variant MODIFY COLUMN PRICE DOUBLE PRECISION DEFAULT 0;


DROP VIEW IF EXISTS order_item_info;
CREATE VIEW order_item_info AS
SELECT OI.ID AS id, p.NAME AS name, PV.SKU AS sku, COALESCE(PV.IMAGES, P.IMAGES) AS images, OI.PRICE AS price, OI.QUANTITY AS quantity, P.DISCOUNT AS discount
FROM ORDER_ITEM OI
         JOIN APP_ORDER AO on AO.ID = oi.ORDER_ID
         JOIN PRODUCT_VARIANT PV on PV.ID = oi.VARIANT_ID
         JOIN PRODUCT P on P.ID = PV.PRODUCT_ID
;

# ALTER TABLE VARIANT_INVENTORY_DETAIL
#     DROP CONSTRAINT  FK_inventory_detail_inventory;

alter table VARIANT_INVENTORY_DETAIL
    ADD constraint FK_inventory_detail_inventory
        foreign key (INVENTORY_ID) references PRODUCT_VARIANT_INVENTORY (ID)
            on update cascade on DELETE NO ACTION;

UPDATE APP_USER SET PHONE_NUMBER = REPLACE(PHONE_NUMBER, '+84', '0');

